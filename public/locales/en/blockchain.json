{
    "accountSearch": {
        "inputPrompt": "Enter your blockchain account ID/name to proceed"
    },
    "selectAsset": {
        "lookup": "Lookup assets issued by an user",
        "fetching": "Retrieving info on your Bitshares account",
        "noResultsHeader": "No issued assets found",
        "noResultsDesc": "This Bitshares account hasn't issued any NFTs on the BTS DEX.",
        "notice": "Note: Buying and owning an NFT on the BTS DEX doesn't automatically grant you NFT editing rights.",
        "selection": "Select the NFT you wish to edit",
        "back": "Go back",
        "refresh": "Refresh",
        "nonNFT1": "The following assets are not yet NFTs",
        "nonNFT2": "Why not introduce NFT functionality to your existing Bitshares assets?"
    },
    "accounts": {
        "enterID": "Enter an account ID to proceed",
        "fetchingAccount": "Looking up account",
        "noAccount": "No such account could be found, check input and try again.",
        "searchResults": "Search results",
        "loading": "Loading...",
        "invalidID": "Invalid Account ID - It must begin with '1.2.' and end in a number.",
        "accountID": "Account ID (e.g. 1.2.0)",
        "existingID": "Proceed with an existing account ID from linked Beet account?",
        "beetReq": "Fetch account ID from Beet wallet",
        "beetLinked": "Proceed with your Beet linked account"
    },
    "loadAsset": {
        "noHeader": "Nothing to edit",
        "noSubHeader": "You have not saved any NFT drafts yet.",
        "draftHeader": "Select the NFT draft you wish to edit",
        "back": "Go back"
    },
    "wizard": {
        "broadcastCreate": "To create this NFT, open your Bitshares Beet wallet and scan the following QR code",
        "broadcastUpdate": "To update this NFT, open your Bitshares Beet wallet and scan the following QR code",
        "inProgress": "Please wait...",
        "back": "Go back",
        "form": {
            "header": "Ready to issue NFTs on the Bitshares blockchain!",
            "subHeader": "Make sure you have enough Bitshares tokens to cover the network fees.",
            "feeTip": "To save on fees consider getting a Bitshares lifetime membership.",
            "poolTip": "Also remember to withdraw the NFT's fee pool after creation.",
            "spec": "BTS NFT Spec",
            "imgHeader": "Image details",
            "qtyImages": "This NFT currently contains the following {{qty}} images:",
            "changeImages": "Change images",
            "issuerLabel": "Bitshares account used for NFT issuance",
            "symbolLabel": "Asset symbol",
            "symbolPlaceholder": "Asset symbol for DEX navigation",
            "mainLabel": "Main description",
            "mainPlaceholder": "Brief asset summary for DEX",
            "snLabel": "Short name",
            "snPlaceholder": "Shortened name for DEX",
            "marketLabel": "Market",
            "marketPlaceholder": "Primary trading asset e.g. BTS",
            "msLabel": "Maximum supply",
            "precisionLabel": "Asset precision (decimal places)",
            "nftHeader": "NFT details",
            "titleLabel": "NFT title",
            "titlePlaceholder": "NFT title",
            "artistLabel": "NFT artist",
            "artistPlaceholder": "Artist identity, username or pseudonym",
            "narrativeLabel": "narrative",
            "narrativePlaceholder": "Narrative",
            "tagsLabel": "NFT tags",
            "tagsPlaceholder": "comma,separated,tags",
            "typeLabel": "NFT type",
            "typePlaceholder": "NFT/ART/VISUAL",
            "attestationLabel": "NFT attestation",
            "attestationPlaceholder": "An attestation regarding this NFT",
            "ackLabel": "NFT acknowledgements",
            "ackPlaceholder": "Any acknowledgements you have to make",
            "holderLicenceLabel": "NFT holders license",
            "holderLicencePlaceholder": "NFT holder license",
            "licenseLabel": "NFT license",
            "licensePlaceholder": "License",
            "sigHeader": "Signed text",
            "signedLabel": "Signature",
            "signedPlaceholder": "signature",
            "signature": "Signature",
            "cerHeader": "Core Exchange Rate",
            "cerbaLabel": "Base amount",
            "cerbaIDLabel": "base asset id",
            "cerqaLabel": "quote amount",
            "cerqaIDLabel": "quote asset id",
            "permsHeader": "Permissions",
            "permsSubHeader": "Note: Disabling permissions is a permanent decision.",
            "disabledCMFPerm": "The charge_market_fee permission was permanently disabled.",
            "cmfPLabel": "Enable market fee (charge_market_fee)",
            "disabledWL": "The white_list permission was permanently disabled.",
            "wlLabel": "Require holders to be white-listed (white_list)",
            "disabledPOA": "The override_authority permission was permanently disabled.",
            "poaLabel": "Asset owner may transfer asset back to himself (override_authority)",
            "disabledTR": "The transfer_restricted permission was permanently disabled.",
            "trLabel": "Asset owner must approve all transfers (transfer_restricted)",
            "disabledDC": "The disable_confidential permission was permanently disabled.",
            "dcLabel": "Disable confidential transactions (disable_confidential)",
            "flagsHeader": "Flags",
            "flagsSubHeader": "If a related permission above is enabled, these flags can be changed at any time.",
            "disabledLabel": "Relavent permission was disabled.",
            "fcmfLabel": "Enable charging a market fee (charge_market_fee)",
            "fwlLabel": "Require holders to be white-listed (white_list)",
            "foaLabel": "Asset owner may transfer asset back to himself (override_authority)",
            "ftrLabel": "Asset owner must approve all transfers (transfer_restricted)",
            "fdcLabel": "Disable confidential transactions (disable_confidential)",
            "submitHeader": "Complete the fields in the above form.",
            "submitBtn": "Submit",
            "waitBeet": "Waiting on responses from BEET prompts",
            "saveDraftLabel": "Save your progress for this NFT?",
            "saveBtn": "Save Draft",
            "modalTitle": "NFT JSON",
            "viewJSON": "View JSON",
            "broadcastSuccess": "Successfully {{action}} your NFT on the {{network}} blockchain!",
            "broadcastActionCreate": "created",
            "broadcastActionUpdate": "updated"
        }
    },
    "issueNFT": {
        "form": {
            "invalid": "invalid",
            "header": "To issue this NFT, open the Beet wallet and scan the below QR code.",
            "back": "Go back",
            "progress": "Please wait...",
            "success": "Successfully issued your NFT on the {{network}} blockchain!",
            "readyHeader": "Ready to issue NFTs on the Bitshares blockchain!",
            "subHeader": "Complete the below form to proceed with NFT issuance.",
            "issueHeader": "Asset issuance form",
            "issuerLabel": "Bitshares account used for NFT issuance",
            "assetID": "NFT Asset ID",
            "quantity": "Quantity of NFT to issue",
            "target": "Target account to issue NFT to",
            "completeHeader": "Complete the fields in the above form.",
            "completeBtn": "Submit",
            "beetWait": "Waiting on responses from BEET prompts"
        }        
    }
}